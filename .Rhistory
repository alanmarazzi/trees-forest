}
splits
ggplot(splits, aes(sprint, somma, color = status, group = status)) +
geom_line(size = 1) +
theme_report +
scale_color_manual(values = pal)
source('~/repo/reporting/phabricator/phabCharts.R', echo=TRUE)
source('~/Documents/personal/trees-forest/titanic.R', echo=TRUE)
knitr::opts_chunk$set(fig.width = 9, dpi = 200,fig.align = "center",message=FALSE)
dso <- read.csv2("~/downloads/DSO.csv")
dso <- read.csv2("~/repo/reporting/finance/DSO.csv")
View(dso)
dso <- reshape2::melt(dso, id.vars = "mese")
dso$variable <- gsub("X", "", dso$variable)
dso$variable <- paste(dso$variable, dso$mese, sep = "-")
dso$variable <- paste(dso$variable, seq(1,10,1), sep = "-")
dso <- read.csv2("~/repo/reporting/finance/DSO.csv")
dso <- reshape2::melt(dso, id.vars = "mese")
dso$variable <- gsub("X", "", dso$variable)
dso$variable <- paste(dso$variable, dso$mese, sep = "-")
dso$variable <- paste(dso$variable, 1, sep = "-")
library(lubridate)
dso$variable <- floor_date(as.Date(dso$variable), "month")
dso <- dso[!is.na(dso$value),]
library(ggplot2)
library(themeMos)
ggplot(dso, aes(variable, value))+
geom_line(color = pal[1], size = 1)+
theme_bw()+
theme_report+
scale_x_date(date_breaks = "3 month", date_labels = "%h-%y")+
labs(title = "DSO", x = "", y = "Giorni")+
geom_smooth(method = "lm", formula = y~poly(x, 4), se = FALSE, size = 1, alpha = .5, color = pal[2])
ggplot(dso, aes(variable, value))+
geom_line(color = pal[1], size = 1)+
theme_bw()+
theme_report+
scale_x_date(date_breaks = "3 month", date_labels = "%h-%y")+
labs(title = "DSO", x = "", y = "Giorni")+
geom_smooth(method = "lm", formula = y~poly(x, 4), se = FALSE, size = 1, alpha = .5, color = pal[2])
ggplot(dso, aes(variable, value))+
geom_line(color = pal[1], size = 1)+
theme_bw()+
theme_report+
scale_x_date(date_breaks = "3 month", date_labels = "%h-%y")+
labs(title = "DSO", x = "", y = "Giorni")+
geom_smooth(method = "lm", se = FALSE, size = 1, alpha = .5, color = pal[2])
ggplot(dso, aes(variable, value))+
geom_line(color = pal[1], size = 1)+
theme_bw()+
theme_report+
scale_x_date(date_breaks = "3 month", date_labels = "%h-%y")+
labs(title = "DSO", x = "", y = "Giorni")+
geom_smooth(method = "lm", formula = y~poly(x, 3), se = FALSE, size = 1, alpha = .5, color = pal[2])
ggplot(dso, aes(variable, value))+
geom_line(color = pal[1], size = 1)+
theme_bw()+
theme_report+
scale_x_date(date_breaks = "3 month", date_labels = "%h-%y")+
labs(title = "DSO", x = "", y = "Giorni")
ggplot(dso, aes(variable, value))+
geom_line(color = pal[1], size = 1)+
theme_bw()+
theme_report+
scale_x_date(date_breaks = "1 month", date_labels = "%h-%y")+
labs(title = "DSO", x = "", y = "Giorni")
png("~/repo/reporting/finance/dso.png", u="in",w=6,h=6,res=1000)
ggplot(dso, aes(variable, value))+
geom_line(color = pal[1], size = 1)+
theme_bw()+
theme_report+
scale_x_date(date_breaks = "1 month", date_labels = "%h-%y")+
labs(title = "DSO", x = "", y = "Giorni")
dev.off()
overdue <- read.csv2("~/repo/reporting/finance/Overdue.csv")
overdue <- overdue[!is.na(overdue$anno),]
View(overdue)
overdue <- read.csv2("~/repo/reporting/finance/Overdue.csv")
overdue <- overdue[!is.na(overdue$anno),]
overdue <- read.csv2("~/repo/reporting/finance/Overdue.csv")
View(overdue)
ggplot(overdue, aes(value/1000))+
geom_bar(fill = pal[1])+
facet_wrap(~vars, scales = "free_y")+
theme_bw()+
theme_report+
labs(title = "Overdue", x = "", y = "K€")+
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = pal[4]),
strip.text = element_text(color = "white"),
axis.text.x = element_text(size = 7)
)
ggplot(overdue, aes(y = value/1000))+
geom_bar(fill = pal[1])+
facet_wrap(~vars, scales = "free_y")+
theme_bw()+
theme_report+
labs(title = "Overdue", x = "", y = "K€")+
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = pal[4]),
strip.text = element_text(color = "white"),
axis.text.x = element_text(size = 7)
)
ggplot(overdue, aes(y = value/1000))+
geom_bar(fill = pal[1], stat = "identity")+
facet_wrap(~vars, scales = "free_y")+
theme_bw()+
theme_report+
labs(title = "Overdue", x = "", y = "K€")+
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = pal[4]),
strip.text = element_text(color = "white"),
axis.text.x = element_text(size = 7)
)
ggplot(overdue, aes(value/1000))+
geom_bar(fill = pal[1], stat = "identity")+
facet_wrap(~vars, scales = "free_y")+
theme_bw()+
theme_report+
labs(title = "Overdue", x = "", y = "K€")+
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = pal[4]),
strip.text = element_text(color = "white"),
axis.text.x = element_text(size = 7)
)
ggplot(overdue, aes(vars, value/1000))+
geom_bar(fill = pal[1], stat = "identity")+
facet_wrap(~vars, scales = "free_y")+
theme_bw()+
theme_report+
labs(title = "Overdue", x = "", y = "K€")+
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = pal[4]),
strip.text = element_text(color = "white"),
axis.text.x = element_text(size = 7)
)
ggplot(overdue, aes(vars, value/1000))+
geom_bar(fill = pal[1], stat = "identity")+
theme_bw()+
theme_report+
labs(title = "Overdue", x = "", y = "K€")+
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(fill = pal[4]),
strip.text = element_text(color = "white"),
axis.text.x = element_text(size = 7)
)
ggplot(overdue, aes(vars, value/1000))+
geom_bar(fill = pal[1], stat = "identity")+
theme_bw()+
theme_report+
labs(title = "Overdue", x = "", y = "K€")
ggplot(overdue, aes(vars, value/1000))+
geom_bar(fill = pal[1], stat = "identity")+
theme_bw()+
theme_report+
labs(title = "Overdue", x = "", y = "K€")+
theme(axis.text.x = element_text(angle = 45))
ggplot(overdue, aes(vars, value/1000))+
geom_bar(fill = pal[1], stat = "identity")+
theme_bw()+
theme_report+
labs(title = "Overdue", x = "", y = "K€")+
theme(axis.text.x = element_text(angle = 45), hjust = 1)
ggplot(overdue, aes(vars, value/1000))+
geom_bar(fill = pal[1], stat = "identity")+
theme_bw()+
theme_report+
labs(title = "Overdue", x = "", y = "K€")+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(overdue, aes(vars, value/1000))+
geom_bar(fill = pal[1], stat = "identity")+
theme_bw()+
theme_report+
labs(title = "Overdue", x = "", y = "K€")+
theme(axis.text.x = element_text(angle = 45, hjust = .8, size = 7))
overdue$vars <- factor(overdue$vars, ordered = TRUE)
ggplot(overdue, aes(vars, value/1000))+
geom_bar(fill = pal[1], stat = "identity")+
theme_bw()+
theme_report+
labs(title = "Overdue", x = "", y = "K€")+
theme(axis.text.x = element_text(angle = 45, hjust = .8, size = 7))
levels(overdue$vars)
overdue <- read.csv2("~/repo/reporting/finance/Overdue.csv")
overdue$vars <- factor(overdue$vars,
levels = c("SCADERE OLTRE 2 MESI",
"SCADERE PROSSIMI 2 MESI",
"SCADUTO NEL MESE",
"SCADUTO 1 MESE",
"SCADUTO 2 MESI",
"SCADUTO 3-6 MESI",
"SCADUTO 6-12 MESI",
"SCADUTO DA OLTRE UN ANNO"))
ggplot(overdue, aes(vars, value/1000))+
geom_bar(fill = pal[1], stat = "identity")+
theme_bw()+
theme_report+
labs(title = "Overdue", x = "", y = "K€")+
theme(axis.text.x = element_text(angle = 45, hjust = .8, size = 7))
ggplot(overdue, aes(vars, value/1000))+
geom_bar(fill = pal[2], stat = "identity")+
theme_bw()+
theme_report+
labs(title = "Overdue", x = "", y = "K€")+
theme(axis.text.x = element_text(angle = 45, hjust = .8, size = 7))
png("~/repo/reporting/finance/overdue.png", u="in",w=6,h=6,res=1000)
ggplot(overdue, aes(vars, value/1000))+
geom_bar(fill = pal[2], stat = "identity")+
theme_bw()+
theme_report+
labs(title = "Overdue al 30 Settembre", x = "", y = "K€")+
theme(axis.text.x = element_text(angle = 45, hjust = .8, size = 7))
ggplot(overdue, aes(vars, value/1000))+
geom_bar(fill = pal[2], stat = "identity")+
theme_bw()+
theme_report+
labs(title = "Overdue al 30 Settembre", x = "", y = "K€")+
theme(axis.text.x = element_text(angle = 45, hjust = .8, size = 7))
dev.off()
png("~/repo/reporting/finance/overdue.png", u="in",w=6,h=6,res=1000)
ggplot(overdue, aes(vars, value/1000))+
geom_bar(fill = pal[2], stat = "identity")+
theme_bw()+
theme_report+
labs(title = "Overdue al 30 Settembre", x = "", y = "K€")+
theme(axis.text.x = element_text(angle = 45, hjust = .8, size = 7))
dev.off()
source('~/.active-rstudio-document', echo=TRUE)
tidy_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup %>%
unnest_tokens(word, text)
nrcjoy <- get_sentiments("nrc") %>%
filter(sentiment == "joy")
tidy_books %>%
filter(book == "Emma") %>%
semi_join(nrcjoy) %>%
count(word, sort = TRUE)
janesentiment <- tidy_books %>%
inner_join(get_sentiments("bing")) %>%
count(book, index = linenumber %/% 80, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
ggplot(janeaustensentiment, aes(index, sentiment, fill = book)) +
geom_bar(alpha = 0.8, stat = "identity", show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
ggplot(janesentiment, aes(index, sentiment, fill = book)) +
geom_bar(alpha = 0.8, stat = "identity", show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
titanic <- read.csv(
"https://raw.githubusercontent.com/alanmarazzi/trees-forest/master/data/train.csv",
stringsAsFactors = FALSE,
na.strings = "")
names(titanic) <- tolower(names(titanic))
titanic$sex <- as.factor(titanic$sex)
titanic$embarked <- as.factor(titanic$embarked)
age_prediction <- lm(age ~ survived + pclass + fare, data = titanic)
titanic$age[is.na(titanic$age)] <- predict(age_prediction,
newdata = titanic[is.na(titanic$age),])
library(dplyr)
library(intubate)
logi <- titanic %>%
select(survived, pclass, sex, age, sibsp) %>%
ntbt_glm(survived ~ ., family = binomial)
logi_pred <- predict(logi, type = "response")
survivors_logi <- rep(0, nrow(titanic))
survivors_logi[logi_pred > .5] <- 1
table(model = survivors_logi, real = titanic$survived)
test <- read.csv("https://raw.githubusercontent.com/alanmarazzi/trees-forest/master/data/test.csv",
stringsAsFactors = FALSE,
na.strings = "")
names(test) <- tolower(names(test))
test$sex <- as.factor(test$sex)
test_logi_pred <- predict(logi, test, type = "response")
surv_test_logi <- data.frame(PassengerId = test$passengerid,
Survived = rep(0, nrow(test)))
surv_test_logi$Survived[test_logi_pred > .5] <- 1
table(surv_test_logi$Survived)
titanicc <- titanic
library(FFTrees)
titanic <- titanicc
rm(titanicc)
fftitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(FFTrees, survived ~ .)
plot(fftitanic,
main = "Titanic", decision.names = c("Not Survived", "Survived"))
fftitanic
fftree <- plot(fftitanic,
main = "Titanic", decision.names = c("Not Survived", "Survived"))
fftree
png("~/documents/personal/trees-forest/fftree.png",
u = "in", w = 5, h = 5, res = 700)
plot(fftitanic,
main = "Titanic", decision.names = c("Not Survived", "Survived"))
dev.off()
png("~/documents/personal/trees-forest/fftree.png",
u = "in", w = 5, h = 6, res = 700)
plot(fftitanic,
main = "Titanic", decision.names = c("Not Survived", "Survived"))
dev.off()
png("~/documents/personal/trees-forest/fftree.png",
u = "in", w = 5.5, h = 6, res = 700)
plot(fftitanic,
main = "Titanic", decision.names = c("Not Survived", "Survived"))
dev.off()
png("~/documents/personal/trees-forest/fftree.png",
u = "in", w = 5.5, h = 6, res = 900)
plot(fftitanic,
main = "Titanic", decision.names = c("Not Survived", "Survived"))
dev.off()
png("~/documents/personal/trees-forest/fftree.png",
u = "in", w = 6, h = 6, res = 700)
plot(fftitanic,
main = "Titanic", decision.names = c("Not Survived", "Survived"))
dev.off()
uniquetitanic$pclass
unique(titanic$pclass)
logi_pred
table(model = survivors_logi, real = titanic$survived)
library(dbConnect)
con <- dbConnect(MySQL(), user = "bi-usr",
password = "ePC76.C2I.FVoEj",
host = "178.62.226.52",
port = 3306,
dbname = "redmine"
)
red <- dbGetQuery(con, "select * from issues")
library(dplyr)
library(lubridate)
red$due_date <- as.Date(red$due_date)
red$created_on <- as.Date(red$created_on)
red$updated_on <- as.Date(red$updated_on)
red$start_date <- as.Date(red$start_date)
red$closed_on <- as.Date(red$closed_on)
red <- red %>%
filter(
created_on >= as.Date("2016-07-01") &
created_on <= floor_date(Sys.Date(), "month")
)
red <- red %>%
filter(!(author_id %in%
c(2,3,4,5,7,10,11,12,13,15,17,20,21,22,23,24,25,31,33,37,38,41,47)))
red <- red %>% filter(tracker_id == 1)
user <- dbGetQuery(con, "select * from users")
dbDisconnect(con)
user$created_on <- as.Date(user$created_on)
user$created_on <- floor_date(user$created_on, "month")
user <- filter(user,
!(id %in% c(2,3,4,5,7,10,11,12,13,15,17,20,21,22,23,24,25,31,33,37,38,41,47)))
red$created_on <- floor_date(red$created_on, "month")
n_users <- length(unique(user$id))
bug_gravi <- red %>%
filter(priority_id > 3) %>%
group_by(created_on) %>%
summarize(gravi = sum(priority_id))
bug_lievi <- red %>%
filter(priority_id < 4) %>%
group_by(created_on) %>%
summarize(lievi = sum(priority_id))
bug <- data.frame(mese = unique(red$created_on), lievi = bug_lievi$lievi)
bug <- merge(bug, bug_gravi, by.x = "mese", by.y = "created_on", all.x = TRUE)
bug$gravi[is.na(bug$gravi)] <- 0
bug_user <- tally(group_by(red, created_on))
bug_user$users <- n_users
bug_user$kpi <- bug_user$n/bug_user$users
bug_user <- bug_user %>% filter(created_on < floor_date(Sys.Date(), "month"))
library(ggplot2)
theme_report <- theme(
panel.grid.major = element_line(color = "gray85"),
axis.ticks = element_blank(),
panel.border = element_blank(),
legend.key = element_blank(),
legend.position = "top"
)
pal <- c("#FF1E84","#4D17CD","#17F5D8","#130B66")
ggplot(bug_user, aes(created_on, kpi))+
geom_line(color = pal[1], size = 1)+
theme_bw()+
theme_report+
scale_x_date(date_breaks = "month", date_labels = "%h-%y", minor_breaks = NULL)+
labs(title = "N° Bug/N° Users", x = "", y = "Bug/Users")+
scale_y_continuous(breaks = seq(0, 2, .25), minor_breaks = NULL)
bug
bug_user
library(dplyr)
library(janeaustenr)
library(tidytext)
book_words <- austen_books() %>%
unnest_tokens(word, text) %>%
count(book, word, sort = TRUE) %>%
ungroup
total_words <- book_words %>%
group_by(book) %>%
summarize(total = sum(n))
book_words <- left_join(book_words, total_words)
book_words
library(ggplot2)
ggplot(book_words, aes(n/total, fill = book)) +
geom_histogram(alpha = .8, show.legend = FALSE) +
xlim(NA, .0009) +
labs(title = "Term Frequency Distribution") +
facet_wrap(~ book, ncol = 2, scales = "free_y")
book_words <- book_words %>%
bind_tf_idf(word, book, n)
book_words
book_words %>%
select(-total) %>%
arrange(desc(tf_idf))
plot_austen <- book_words %>%
arrange(desc(tf_idf)) %>%
mutate(word = factor(word, levels = rev(unique(word))))
ggplot(plot_austen[1:20,], aes(word, tf_idf, fill = book)) +
geom_bar(alpha = .8, stat = "identity") +
labs(title = "tf-idf", x = NULL, y = "tf-idf")+
coord_flip()
library(gutenbergr)
physics <- gutenberg_download(c(37729, 14725, 13476, 5001),
meta_fields = "author")
physics_words <- physics %>%
unnest_tokens(word, text) %>%
count(author, word, sort = TRUE) %>%
ungroup()
physics_words
physics_words <- physics_words %>%
bind_tf_idf(word, author, n)
plot_physics <- physics_words %>%
arrange(desc(tf_idf)) %>%
mutate(word = factor(word, levels = rev(unique(word)))) %>%
mutate(author = factor(author, levels = c("Galilei, Galileo",
"Huygens, Christiaan",
"Tesla, Nikola",
"Einstein, Albert")))
ggplot(plot_physics[1:20,], aes(word, tf_idf, fill = author)) +
geom_bar(alpha = .8, stat = "identity") +
labs(x = NULL, y = "tf-idf") +
coord_flip()
library(party)
partyTitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(ctree, survived ~ .)
library(dplyr)
library(intubate)
partyTitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(ctree, survived ~ .)
titanic <- read.csv(
"https://raw.githubusercontent.com/alanmarazzi/trees-forest/master/data/train.csv",
stringsAsFactors = FALSE,
na.strings = "")
names(titanic) <- tolower(names(titanic))
titanic$sex <- as.factor(titanic$sex)
titanic$embarked <- as.factor(titanic$embarked)
age_prediction <- lm(age ~ survived + pclass + fare, data = titanic)
titanic$age[is.na(titanic$age)] <- predict(age_prediction,
newdata = titanic[is.na(titanic$age),])
sum(is.na(titanic$age))
logi <- titanic %>%
select(survived, pclass, sex, age, sibsp) %>%
ntbt_glm(survived ~ ., family = binomial)
logi_pred <- predict(logi, type = "response")
survivors_logi <- rep(0, nrow(titanic))
survivors_logi[logi_pred > .5] <- 1
table(model = survivors_logi, real = titanic$survived)
test <- read.csv("https://raw.githubusercontent.com/alanmarazzi/trees-forest/master/data/test.csv",
stringsAsFactors = FALSE,
na.strings = "")
names(test) <- tolower(names(test))
test$sex <- as.factor(test$sex)
test_logi_pred <- predict(logi, test, type = "response")
surv_test_logi <- data.frame(PassengerId = test$passengerid,
Survived = rep(0, nrow(test)))
surv_test_logi$Survived[test_logi_pred > .5] <- 1
table(surv_test_logi$Survived)
titanicc <- titanic
titanic <- titanicc
rm(titanicc)
partyTitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(ctree, survived ~ .)
partyTitanic
summary(partyTitanic)
partyTitanic@responses
plot(partyTitanic)
Predict(partyTitanic, newdata = test)
party_pred <- Predict(partyTitanic, newdata = test)
?plot.BinaryTree
party_pred <- ifelse(party_pred > .5, 1, 0)
party_pred <- data.frame(PassengerId = test$passengerid, Survived = party_pred)
setwd("~/documents/personal/trees-forest")
write.csv(party_pred, "results/party.csv", row.names = TRUE)
write.csv(party_pred, "results/party.csv", row.names = FALSE)
class(titanic$survived)
partyTitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(ctree, as.factor(survived) ~ .)
plot(partyTitanic)
party_pred <- Predict(partyTitanic, newdata = test)
head(as.numeric(party_pred))
head(as.numeric(party_pred), 20)
party_pred <- as.numeric(party_pred) - 1
party_pred <- data.frame(PassengerId = test$passengerid, Survived = party_pred)
write.csv(party_pred, "results/party.csv", row.names = FALSE)
