facet_wrap(~ variable, scales = "free_y")
ggplot(media, aes(sprint, value, color = status, group = status)) +
geom_line(size = 1) +
theme_report +
scale_color_manual(values = pal) +
facet_wrap(~ variable, scales = "free_y") +
labs(title = "Linea 'Media'", x = "# sprint", y = "")
ggplot(vcm, aes(sprint, value, color = status, group = status)) +
geom_line(size = 1) +
theme_report +
scale_color_manual(values = pal) +
facet_wrap(~ variable, scales = "free_y") +
labs(title = "Linea 'VCM'", x = "# sprint", y = "")
png("~/repo/reporting/phabricator/graphs/media.png",
u = "in", w = 9, h = 7, res = 800)
ggplot(media, aes(sprint, value, color = status, group = status)) +
geom_line(size = 1) +
theme_report +
scale_color_manual(values = pal) +
facet_wrap(~ variable, scales = "free_y") +
labs(title = "Linea 'Media'", x = "# sprint", y = "")
dev.off()
png("~/repo/reporting/phabricator/graphs/vcm.png",
u = "in", w = 9, h = 7, res = 800)
ggplot(vcm, aes(sprint, value, color = status, group = status)) +
geom_line(size = 1) +
theme_report +
scale_color_manual(values = pal) +
facet_wrap(~ variable, scales = "free_y") +
labs(title = "Linea 'VCM'", x = "# sprint", y = "")
dev.off()
vcm
media <- read.csv2("~/desktop/media.csv", stringsAsFactors = FALSE)
vcm <- read.csv2("~/desktop/vcm.csv", stringsAsFactors = FALSE)
media$line <- "media"
vcm$line <- "vcm"
names(vcm) <- names(media)
vcm
media <- media %>%
group_by(sprint, status, line) %>%
summarize(media = mean(weight),
people = mean(num_people),
count = n(),
somma = sum(weight),
perPerson = somma/people)
for (i in 1:nrow(media)) {
if (media$status[i] == "tbd") {
media[i,c(4,6:8)] <- media[i, c(4,6:8)] + media[i-1,c(4,6:8)]
} else {
media[i,] <- media[i,]
}
}
row_tbd <- data.frame(sprint = 11, status = "tbd", line = "media",
media = 5.117647, people = 5, count = 17, somma = 87,
perPerson = 17.4)
media <- rbind(as.data.frame(media), row_tbd)
vcm <- vcm %>%
group_by(sprint, status, line) %>%
summarize(media = mean(weight),
people = mean(num_people),
count = n(),
somma = sum(weight),
perPerson = somma/people)
for (i in 1:nrow(media)) {
if (media$status[i] == "tbd") {
media[i,c(4,6:8)] <- media[i, c(4,6:8)] + media[i-1,c(4,6:8)]
} else {
media[i,] <- media[i,]
}
}
vcm
for (i in 1:nrow(vcm)) {
if (vcm$status[i] == "tbd") {
vcm[i,c(4,6:8)] <- vcm[i, c(4,6:8)] + vcm[i-1,c(4,6:8)]
} else {
vcm[i,] <- vcm[i,]
}
}
media <- reshape2::melt(media, id.vars = c("sprint", "status", "people", "line"))
translator <- c("media" = "Peso Medio",
"count" = "Numero storie",
"somma" = "Peso storie",
"perPerson" = "Peso per risorsa")
media$variable <- translator[media$variable]
media$variable <- factor(media$variable, levels = c("Numero storie",
"Peso storie",
"Peso Medio",
"Peso per risorsa"))
vcm <- reshape2::melt(vcm, id.vars = c("sprint", "status", "people", "line"))
vcm$variable <- translator[vcm$variable]
ggplot(media, aes(sprint, value, color = status, group = status)) +
geom_line(size = 1) +
theme_report +
scale_color_manual(values = pal) +
facet_wrap(~ variable, scales = "free_y") +
labs(title = "Linea 'Media'", x = "# sprint", y = "")
ggplot(vcm, aes(sprint, value, color = status, group = status)) +
geom_line(size = 1) +
theme_report +
scale_color_manual(values = pal) +
facet_wrap(~ variable, scales = "free_y") +
labs(title = "Linea 'VCM'", x = "# sprint", y = "")
png("~/repo/reporting/phabricator/graphs/vcm.png",
u = "in", w = 9, h = 7, res = 800)
ggplot(vcm, aes(sprint, value, color = status, group = status)) +
geom_line(size = 1) +
theme_report +
scale_color_manual(values = pal) +
facet_wrap(~ variable, scales = "free_y") +
labs(title = "Linea 'VCM'", x = "# sprint", y = "")
dev.off()
library(sonaR)
library(httr)
library(dplyr)
library(Rfacebook)
library(tidytext)
myapp <- oauth_app("twitter",
key = "5VP9EcnDzwT2XzvMI0aQn3DYt",
secret = "JPbcnKOLO34JoXGAqdWtZPPRo0nRRD1fQnDGTbeM6clBCdSJWS"
)
tw_token <- oauth1.0_token(oauth_endpoints("twitter"), myapp)
brand <- "redbull"
tw_user <- "redbullITA"
fb_user <- "redbull"
fb_date <- "2016-01-01"
tweets <- get_tweets(tw_user, tw_token)
tweets <- tw_to_df(tweets)
tweets$created <- as.Date(strptime(
tweets$created,
"%a %b %e %H:%M:%S %z %Y",
tz = "Europe/Rome"
))
tweets$type <- if_else(
grepl("video", tweets$link),
"video",
if_else(
grepl("photo", tweets$link),
"photo",
"post"
)
)
load("fb_oauth")
fb <- getPage(
fb_user,
fb_oauth,
since = fb_date,
reactions = TRUE
)
?Rfacebook
fb_oauth <- fbOAuth("561531270717280", "269aed3a44cee4b5a9680fdd43e9fb1e")
save(fb_oauth, "fb_oauth")
save(fb_oauth, file = "fb_oauth")
load("fb_oauth")
fb <- getPage(
fb_user,
fb_oauth,
since = fb_date,
reactions = TRUE
)
tw_user <- "dmaxitalia"
fb_user <- "dmaxitalia"
tweets <- get_tweets(tw_user, tw_token)
tweets <- tw_to_df(tweets)
Sys.setlocale("LC_TIME", "C")
tweets$created <- as.Date(strptime(
tweets$created,
"%a %b %e %H:%M:%S %z %Y",
tz = "Europe/Rome"
))
tweets$type <- if_else(
grepl("video", tweets$link),
"video",
if_else(
grepl("photo", tweets$link),
"photo",
"post"
)
)
load("fb_oauth")
fb <- getPage(
fb_user,
fb_oauth,
since = fb_date,
reactions = TRUE
)
fb <- getPage(
fb_user,
fb_oauth,
since = fb_date,
reactions = TRUE,
n = 500
)
fb <- getPage(
fb_user,
fb_oauth,
since = fb_date,
reactions = TRUE,
n = 400
)
fb <- getPage(
fb_user,
fb_oauth,
since = fb_date,
reactions = TRUE,
n = 300
)
tweets$text <- clean_text(tweets$text)
fb$message <- clean_text(fb$message)
tweets_corpus <- tweets %>% unnest_tokens(word, text)
fb_corpus <- fb %>% unnest_tokens(word, message)
head(tweets_corpus)
tf_tweets <- tweets_corpus %>%
count(type, word, sort = TRUE) %>%
ungroup
tf_tweets
tf_tweets <- tf_tweets %>%
bind_tf_idf(word, type, n)
tf_tweets
tf_tweets <- tf_tweets %>%
arrange(desc(tf_idf))
tf_tweets
print(tf_tweets, n = 100)
head(fb_corpus)
tf_fb <- fb_corpus %>%
count(type, word, sort = TRUE) %>%
ungroup %>%
bind_tf_idf(word, type, n) %>%
arrange(desc(tf_idf))
tf_fb
print(tf_fb, n = 100)
tweets_corpus
tf_tweets <- tweets_corpus %>%
count(id, word, sort = TRUE) %>%
ungroup
tf_tweets <- tf_tweets %>%
bind_tf_idf(word, id, n)
tf_tweets <- tf_tweets %>%
arrange(desc(tf_idf))
tf_tweets
tf_tweets <- tweets_corpus %>%
count(link, word, sort = TRUE) %>%
ungroup
tf_tweets <- tf_tweets %>%
bind_tf_idf(word, link, n)
tf_tweets <- tf_tweets %>%
arrange(desc(tf_idf))
tf_tweets
tf_tweets[,-1]
print(tf_tweets[,-1], n = 100)
tweets_corpus
sum(is.na(tweets_corpus$link))
7038/32143
fb_user <- "tascadalmerita"
fb <- getPage(
fb_user,
fb_oauth,
since = fb_date,
reactions = TRUE,
n = 400
)
fb_corpus <- fb %>% unnest_tokens(word, message)
tf_fb <- fb_corpus %>%
count(type, word, sort = TRUE) %>%
ungroup %>%
bind_tf_idf(word, type, n) %>%
arrange(desc(tf_idf))
tf_fb
head(fb_corpus)
tf_fb <- fb_corpus %>%
count(link, word, sort = TRUE) %>%
ungroup %>%
bind_tf_idf(word, link, n) %>%
arrange(desc(tf_idf))
tf_fb
print(tf_fb[,-1], 100)
print(tf_fb[,-1], n = 100)
unique(fb_corpus$type)
write.csv2(tf_fb, file = "~/desktop/tf_tasca.csv")
library(evtree)
titanic <- read.csv(
"https://raw.githubusercontent.com/alanmarazzi/trees-forest/master/data/train.csv",
stringsAsFactors = FALSE,
na.strings = "")
names(titanic) <- tolower(names(titanic))
titanic$sex <- as.factor(titanic$sex)
titanic$embarked <- as.factor(titanic$embarked)
age_prediction <- lm(age ~ survived + pclass + fare, data = titanic)
titanic$age[is.na(titanic$age)] <- predict(age_prediction,
newdata = titanic[is.na(titanic$age),])
library(dplyr)
library(intubate)
logi <- titanic %>%
select(survived, pclass, sex, age, sibsp) %>%
ntbt_glm(survived ~ ., family = binomial)
logi_pred <- predict(logi, type = "response")
survivors_logi <- rep(0, nrow(titanic))
survivors_logi[logi_pred > .5] <- 1
table(model = survivors_logi, real = titanic$survived)
test <- read.csv("https://raw.githubusercontent.com/alanmarazzi/trees-forest/master/data/test.csv",
stringsAsFactors = FALSE,
na.strings = "")
names(test) <- tolower(names(test))
test$sex <- as.factor(test$sex)
test_logi_pred <- predict(logi, test, type = "response")
surv_test_logi <- data.frame(PassengerId = test$passengerid,
Survived = rep(0, nrow(test)))
surv_test_logi$Survived[test_logi_pred > .5] <- 1
table(surv_test_logi$Survived)
library(party)
partyTitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(ctree, as.factor(survived) ~ .)
party_pred <- Predict(partyTitanic, newdata = test)
party_pred <- as.numeric(party_pred) - 1
party_pred <- data.frame(PassengerId = test$passengerid, Survived = party_pred)
library(evtree)
detach("package:evtree", unload=TRUE)
library("evtree", lib.loc="~/Library/R/3.3/library")
titanic <- read.csv(
"https://raw.githubusercontent.com/alanmarazzi/trees-forest/master/data/train.csv",
stringsAsFactors = FALSE,
na.strings = "")
names(titanic) <- tolower(names(titanic))
titanic$sex <- as.factor(titanic$sex)
titanic$embarked <- as.factor(titanic$embarked)
age_prediction <- lm(age ~ survived + pclass + fare, data = titanic)
summary(age_prediction)
titanic$age[is.na(titanic$age)] <- predict(age_prediction,
newdata = titanic[is.na(titanic$age),])
library(dplyr)
library(intubate)
logi <- titanic %>%
select(survived, pclass, sex, age, sibsp) %>%
ntbt_glm(survived ~ ., family = binomial)
logi_pred <- predict(logi, type = "response")
survivors_logi <- rep(0, nrow(titanic))
survivors_logi[logi_pred > .5] <- 1
table(model = survivors_logi, real = titanic$survived)
test <- read.csv("https://raw.githubusercontent.com/alanmarazzi/trees-forest/master/data/test.csv",
stringsAsFactors = FALSE,
na.strings = "")
names(test) <- tolower(names(test))
test$sex <- as.factor(test$sex)
test_logi_pred <- predict(logi, test, type = "response")
surv_test_logi <- data.frame(PassengerId = test$passengerid,
Survived = rep(0, nrow(test)))
surv_test_logi$Survived[test_logi_pred > .5] <- 1
table(surv_test_logi$Survived)
library(party)
partyTitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(ctree, as.factor(survived) ~ .)
party_pred <- Predict(partyTitanic, newdata = test)
party_pred <- as.numeric(party_pred) - 1
party_pred <- data.frame(PassengerId = test$passengerid, Survived = party_pred)
train_party <- Predict(partyTitanic)
table(train_party, titanic$survived)
table(tree = train_party, real = titanic$survived)
library(evtree)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ .)
evotitanic
summary(evotitanic)
plot(evotitanic)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ ., minbucket = 25)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ ., minbucket = 25, minsplit = 50)
plot(evotitanic)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ .)
table(predict(evotitanic), titanic$survived)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ ., maxdepth = 4)
table(predict(evotitanic), titanic$survived)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ ., minbucket = 25, minsplit = 50)
table(predict(evotitanic), titanic$survived)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ ., minbucket = 50, minsplit = 100)
table(predict(evotitanic), titanic$survived)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ .)
table(predict(evotitanic), titanic$survived)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ .)
table(predict(evotitanic), titanic$survived)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ .)
table(predict(evotitanic), titanic$survived)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ .)
table(predict(evotitanic), titanic$survived)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ .)
set.seed(9999)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ .)
table(predict(evotitanic), titanic$survived)
set.seed(999)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ .)
table(predict(evotitanic), titanic$survived)
set.seed(99)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ .)
table(predict(evotitanic), titanic$survived)
set.seed(9)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ .)
table(predict(evotitanic), titanic$survived)
set.seed(1000)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ .)
table(predict(evotitanic), titanic$survived)
129/nrow(titanic)
evo_pred <- predict(evotitanic, test)
str(evo_pred)
evo_pred <- as.numeric(predict(evotitanic, test)) - 1
evo_pred <- data.frame(PassengerId = test$passengerid, Survived = evo_pred)
setwd("~/documents/personal/trees-forest")
write.csv(party_pred, "results/evo.csv", row.names = FALSE)
write.csv(evo_pred, "results/evo.csv", row.names = FALSE)
set.seed(10)
evotitanic <- titanic %>%
select(age, pclass, sex, sibsp, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ .)
evo_pred <- as.numeric(predict(evotitanic, test)) - 1
evo_pred <- data.frame(PassengerId = test$passengerid, Survived = evo_pred)
write.csv(evo_pred, "results/evo.csv", row.names = FALSE)
table(predict(evotitanic), titanic$survived)
plot(evotitanic)
set.seed(1000)
evotitanic <- titanic %>%
select(age, pclass, sex, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ .)
table(predict(evotitanic), titanic$survived)
plot(evtree)
plot(evotitanic)
set.seed(1000)
evotitanic <- titanic %>%
select(age, pclass, sex, fare, survived) %>%
ntbt(evtree, as.factor(survived) ~ ., minbucket = 15, minsplit = 30)
table(predict(evotitanic), titanic$survived)
plot(evotitanic)
evo_pred <- as.numeric(predict(evotitanic, test)) - 1
evo_pred <- data.frame(PassengerId = test$passengerid, Survived = evo_pred)
write.csv(evo_pred, "results/evo.csv", row.names = FALSE)
names(titanic)
head(titanic$parch)
evotitanic <- titanic %>%
select(age, pclass, sibsp, sex, fare, survived, parch, cabin) %>%
ntbt(evtree, as.factor(survived) ~ ., minbucket = 15, minsplit = 30)
table(predict(evotitanic), titanic$survived)
plot(evotitanic)
set.seed(1000)
evotitanic <- titanic %>%
select(age, pclass, sibsp, sex, fare, survived, parch) %>%
ntbt(evtree, as.factor(survived) ~ ., minbucket = 15, minsplit = 30)
set.seed(1000)
evotitanic <- titanic %>%
select(age, pclass, sibsp, sex, fare, survived, parch) %>%
ntbt(evtree, as.factor(survived) ~ ., minbucket = 15, minsplit = 30, niterations = 30000)
table(predict(evotitanic), titanic$survived)
plot(evotitanic)
set.seed(1000)
evotitanic <- titanic %>%
select(age, pclass, sibsp, sex, fare, survived, parch) %>%
ntbt(evtree, as.factor(survived) ~ ., minbucket = 10, minsplit = 20, niterations = 50000)
table(predict(evotitanic), titanic$survived)
plot(evotitanic)
evo_pred <- as.numeric(predict(evotitanic, test)) - 1
evo_pred <- data.frame(PassengerId = test$passengerid, Survived = evo_pred)
write.csv(evo_pred, "results/evo.csv", row.names = FALSE)
evotitanic <- titanic %>%
select(age, pclass, sibsp, sex, fare, survived, parch) %>%
ntbt(evtree, as.factor(survived) ~ .)
table(predict(evotitanic), titanic$survived)
evo_pred <- as.numeric(predict(evotitanic, test)) - 1
evo_pred <- data.frame(PassengerId = test$passengerid, Survived = evo_pred)
write.csv(evo_pred, "results/evo.csv", row.names = FALSE)
set.seed(100)
evotitanic <- titanic %>%
select(age, pclass, sibsp, sex, fare, survived, parch) %>%
ntbt(evtree, as.factor(survived) ~ .)
table(predict(evotitanic), titanic$survived)
evo_pred <- as.numeric(predict(evotitanic, test)) - 1
evo_pred <- data.frame(PassengerId = test$passengerid, Survived = evo_pred)
sum(evo_pred != logi_pred)
evo_pred <- data.frame(PassengerId = test$passengerid, Survived = evo_pred)
sum(evo_pred != logi_pred)
sum(evo_pred != surv_test_logi)
evo_pred <- as.numeric(predict(evotitanic, test)) - 1
evo_pred <- data.frame(PassengerId = test$passengerid, Survived = evo_pred)
sum(evo_pred != surv_test_logi)
